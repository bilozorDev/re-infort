-- Fix search path vulnerability for all functions
-- This prevents SQL injection attacks through search path manipulation
-- Reference: https://supabase.com/docs/guides/database/database-linter?lint=0011_function_search_path_mutable

DO $$
DECLARE
    func_record RECORD;
    func_count INTEGER := 0;
    fixed_count INTEGER := 0;
BEGIN
    -- Fix all public functions that don't have search_path set
    FOR func_record IN 
        SELECT 
            p.proname AS function_name,
            pg_get_function_identity_arguments(p.oid) AS arguments,
            p.oid
        FROM pg_proc p
        JOIN pg_namespace n ON p.pronamespace = n.oid
        WHERE n.nspname = 'public'
        AND NOT COALESCE(p.proconfig, '{}') && ARRAY['search_path=']
    LOOP
        func_count := func_count + 1;
        
        -- Build and execute ALTER FUNCTION statement
        EXECUTE format('ALTER FUNCTION public.%I(%s) SET search_path = ''''',
                      func_record.function_name,
                      func_record.arguments);
        
        fixed_count := fixed_count + 1;
        
        RAISE NOTICE 'Fixed: public.%(%)', func_record.function_name, func_record.arguments;
    END LOOP;
    
    RAISE NOTICE '';
    RAISE NOTICE '===== SECURITY FIX SUMMARY =====';
    RAISE NOTICE 'Fixed search_path vulnerability for % public functions', fixed_count;
    RAISE NOTICE 'This prevents SQL injection attacks through search path manipulation';
    
    -- Verify no functions remain vulnerable
    SELECT COUNT(*) INTO func_count
    FROM pg_proc p
    JOIN pg_namespace n ON p.pronamespace = n.oid
    WHERE n.nspname = 'public'
    AND NOT COALESCE(p.proconfig, '{}') && ARRAY['search_path='];
    
    IF func_count > 0 THEN
        RAISE WARNING '% functions may need manual review', func_count;
    ELSE
        RAISE NOTICE 'All public functions are now secure!';
    END IF;
    RAISE NOTICE '================================';
END $$;